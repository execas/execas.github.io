---
layout: post
title: Finding files based on timestamps
date: 2018-10-29
tags: [find, security, linux, tools]
---

## Finding files based on timestamps

### Access (`atime`)

The *access* timestamp is updated when a file is opened for reading or writing.
On a file system mounted with `relatime` (or `defaults`, which is very common), `atime` will update on access if the file has been modified or changed after it was last accessed, or if the previous `atime` update was more than 24 hours ago.

Create files with various access times:

```bash
$ mkdir test; cd test
$ touch -a -d "2 days ago" 2da
$ touch -a -d "10 days ago" 10da
$ touch -a -d "30 min ago" 30ma
```

Find files accessed more than 2*24 hours ago:

```bash
$ find -atime +2
./10da
```

Find files accessed less than 2*24 hours ago:

```bash
$ find -atime -2
./30ma
```

The `find -atime <n>` command finds out how long ago the file was accessed in *periods* of 24 hours, and ignores any fractional part.

The file "2da" has an `atime` of exactly 2 periods of 24 hours.

```bash
find -atime 2
./2da
```

Find a file accessed less than 100 minutes ago:

```bash
$ find -amin -100
./30ma
```

### Modify (`mtime`) and Change (`ctime`)

The *modify* timestamp is updated when a files content is modified.
The *change* timestamp is updated when a files metadata is changed.

The options `-mtime <n>` and `-ctime <n>` work in the same way as `-atime` <n>`, but find files based on modification time and change time, respectively.

The options `mmin <n>` and `cmin <n> are similar to `amin <n>`.


## The `-newer` options

### `-newer`

This option let's you find files that have been accessed, modified or changed more recently than a specified file was *modified*.

Create files with various timestamps:

```bash
$ mkdir test; cd test
$ touch -d "30 min ago" am30ma     ○ accessed and modified 30 minutes ago
$ touch -d "2 days ago" am2da      ○ accessed and modified 2 days ago
$ touch -a -d "2 days ago" a2da    ○ accessed 2 days ago
$ touch -m -d "1 day ago" m1da     ○ modified 1 day ago (accessed on creation)
```

Find files *modified* after "am2da" was modified:

```bash
$ find -newer am2da
.
./a2da
./m1da
./am30ma
```

Find files *accessed* after "am30ma" was modified:

```bash
$find -anewer am30ma
.
./m1da
```

Find files *changed* after 







The options `-newer <file>` (for `mtime`) and `cnewer <file> are similar to `-anewer`. Keep in mind that we are always looking for a file that was  more recently than "<file>" was *modified*.






